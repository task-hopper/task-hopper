hop() {
  local cmd_result=()
  local directive=''
  while IFS= read -r line ; do
    if [[ "$line" =~ ^_{2}hop_{1}[A-Za-z]*_{2}$ ]]; then
      directive="$line"
    else
      if [[ "$directive" == '__hop_message__' ]]; then
        echo -e "$line"
      elif [[ "$directive" == '__hop_task__' ]]; then
        eval "$line"
      elif [[ "$directive" == '__hop_warning__' ]]; then
        local FONT_YELLOW='\033[0;33m'
        local FONT_DEFAULT='\033[0m'
        echo -e "${FONT_YELLOW}${line}${FONT_DEFAULT}"
      elif [[ "$directive" == '__hop_error__' ]]; then
        local FONT_RED='\033[0;31m'
        local FONT_DEFAULT='\033[0m'
        echo -e "${FONT_RED}${line}${FONT_DEFAULT}"
      else
        echo -e 'Invalid command directive'
      fi
    fi
  done < <(python /home/crank/repos/personal/task-hopper/hop $@)
}

_hop()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [[ ${COMP_CWORD} -eq 1 ]]; then
      opts=$(hop -h | awk '/positional arguments:/{flag=1;next}/^$/{flag=0}flag' | cut -d ' ' -f 5)
      COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
      return 0
    fi

    case "$prev" in
      to)
        local projects=$(hop list --no-color | cut -c 4- | sed -n '0,/^$/p')
        COMPREPLY=($(compgen -W "${projects}" -- ${cur}))
        return 0
        ;;

      env)
        local envs=$(hop env -l)
        [[ $envs =~ "No environments configured" ]] && return 0
        COMPREPLY=($(compgen -W "${envs}" -- ${cur}))
        return 0
        ;;
    esac
}

if [[ $(ps -p$$ -ocmd=) = "zsh" ]]; then
  autoload bashcompinit
  bashcompinit
fi

complete -F _hop hop
